prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike)
bike_test <-vroom("./test.csv")
bike_train <- vroom("./train.csv")
bike_train %>%
mutate(weather = ifelse(weather==4, 3,weather))
myRecipe <- recipe(count~., data = bike_train) %>%
step_rm(casual, registered) %>%
step_time(datetime, features=c("hour", "minute"))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
view(bike_test)
bike_prediction <- predict(bike_workflow,
bike_test)
bike_train <- vroom("./train.csv") %>%
-select(c(casual, registered))
bike_train <- vroom("./train.csv") %>%
-select(c("casual", "registered"))
bike_train <- vroom("./train.csv") %>%
select(-c("casual", "registered"))
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute"))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
bike_prediction
viwe(bike_prediction)
view(bike_prediction)
bike_prediction <- predict(bike_workflow,
bike_test)
view(bike_prediction)
mutate(ifelse(bike_prediction<0, 0,bike_prediction))
mutate(ifelse(bike_prediction<0, 0))
mutate(ifelse(bike_prediction<0, 0, bike_prediction))
dplyr::mutate(ifelse(bike_prediction<0, 0, bike_prediction))
bike_prediction[bike_prediction < 0] <- 0
view(bike_prediction)
vroom_write(bike_prediction, BikePredictions)
predictions_df <- data.frame(PredictedCount = bike_prediction)
BikePrediction <- "bike_submission.csv"
# Write the predictions data frame to a CSV file using vroom_write
vroom_write(predictions_df, BikePrediction)
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
view(bike_prediction)
view(bike_train)
view(bike_prediction)
view(bike_test)
bike_test$Count <- bike_prediction
view(bike_prediction)
bike_test$count <- bike_prediction
view(bike_test)
view(bike_test)
bike_train <- vroom("./train.csv") %>%
select(-c("casual", "registered"))
bike_test <-vroom("./test.csv")
install.packages("tidymodels")
install.packages("tidymodels")
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
view(bike_train)
view(bike_test)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
view(bike_test)
view(bike_prediction)
bike_prediction[bike_prediction < 0] <- 0
view(bike_prediction)
bike_test$Count <- bike_prediction
view(bike_test)
bike_prediction <- predict(bike_workflow,
bike_test, type = "response")
colnames(bike_test)[colnames(bike_test) == "Count.pred"] <- "Count"
view(bike_test)
colnames(bike_test)[colnames(bike_test) == "Count"] <- "Count"
view(bike_test)
bike_prediction[bike_prediction < 0] <- 0
view(bike_prediction)
bike_test$Count <- bike_prediction
view(bike_test)
colnames(bike_test)[colnames(bike_test) == "Count$.pred"] <- "Count"
view(bike_test)
colnames(bike_test)[colnames(bike_test) == ".pred"] <- "Count"
view(bike_test)
bike_test$count <- bike_prediction
colnames(bike_test)[colnames(bike_test) == ".pred"] <- "Count"
view(bike_test)
bike_test$Count <- bike_prediction
colnames(bike_test)[colnames(bike_test) == "Count$.pred"] <- "Count"
view(bike_test)
library(dplyr)
bike_test <- bike_test %>%
mutate(Count = bike_prediction) %>%
select(-Count.pred)
bike_test$Count <- bike_prediction
bike_test <- bike_test %>%
mutate(Count = bike_prediction) %>%
select(-Count$.pred)
bike_test <- bike_test %>%
mutate(Count = bike_prediction) %>%
select(-count$.pred)
view(bike_test)
bike_train <- vroom("./train.csv") %>%
select(-c("casual", "registered"))
bike_test <-vroom("./test.csv")
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
view(bike_train)
view(bike_test)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test,
type = "response")
bike_prediction <- predict(bike_workflow,
bike_test)
bike_prediction <- predict(bike_workflow,
bike_test)
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_corr(all_predictors(), threshold=0.5)
prepped_recipe<- prep(myRecipe)
rlang::last_trace()
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_zv(all_predictors())
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
view(bike_train)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_zv(all_predictors()) %>%
step_corr(all_predictors(), threshold=0.5)
prepped_recipe<- prep(myRecipe)
#Shows possible correlations between variables in the dataset
plot_correlation(bike)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_rm(temp)
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
view(bike_train)
view(bike_test)
bike_train <- vroom("./train.csv") %>%
select(-c("casual", "registered","atemp"))
bike_test <-vroom("./test.csv") %>%
select(-c("atemp"))
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour", "minute")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
view(bike_train)
view(bike_test)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features=c("hour")) %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
view(bike_train)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features="hour") %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_date(datetime, features ="dow" )
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
view(bike_train)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features="hour") %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_date(datetime, features ="dow" ) %>%
step_binary(all_outcomes()) %>%
step_binary(holiday)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features="hour") %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_date(datetime, features ="dow" ) %>%
step_dummy(all_outcomes()) %>%
step_dummy(c(holiday, workingday), one_hot = TRUE)
prepped_recipe<- prep(myRecipe)
rlang::last_trace()
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features="hour") %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_dummy(all_outcomes()) %>%
step_dummy(c(holiday, workingday), one_hot = TRUE)
prepped_recipe<- prep(myRecipe)
myRecipe <- recipe(count~., data = bike_train) %>%
step_mutate(holiday=factor(holiday))%>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_dummy(all_outcomes()) %>%
step_dummy(c(holiday, workingday), one_hot = TRUE)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features="hour") %>%
step_mutate(holiday=factor(holiday))%>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_dummy(all_outcomes()) %>%
step_dummy(c(holiday), one_hot = TRUE)
prepped_recipe<- prep(myRecipe)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features="hour") %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
prepped_recipe<- prep(myRecipe)
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features="hour") %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
bike_train <- vroom("./train.csv") %>%
select(-c("casual", "registered","temp"))
bike_test <-vroom("./test.csv") %>%
select(-c("temp"))
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features="hour") %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
view(bike_prediction)
bike_prediction[bike_prediction < 0] <- 0
view(bike_prediction)
bike_test$count <- bike_prediction
view(bike_test)
BikeTest <- "bike_test_predictions.csv"
vroom_write(bike_test, BikeTest)
view(bike_test)
view(BikeTest)
bike_test$count <- bike_prediction
prediction_datetime_df <- bike_test %>%
select(datetime, count)
view(prediction_datetime_df)
bike_prediction_df <- bike_test %>%
select(datetime, count)
view(bike_prediction_df)
BikeTest <- "bike_prediction_df.csv"
vroom_write(bike_prediction_df,BikeTest)
current_directory <- getwd()
output_filename <- file.path(current_directory, "bike_prediction_df.csv")
output_filename
BikeTest <- "/Users/lucydornon/Documents/Stat 348/KaggleBikeShare/bike_prediction_df.csv"
vroom_write(bike_prediction_df, BikeTest)
bike_train <- vroom("./train.csv") %>%
select(-c("casual", "registered","temp"))
bike_test <-vroom("./test.csv") %>%
select(-c("temp"))
myRecipe <- recipe(count~., data = bike_train) %>%
step_time(datetime, features="hour") %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
view(bike_train)
view(bike_test)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
view(bike_prediction)
bike_prediction[bike_prediction < 0] <- 0
view(bike_prediction)
bike_test$count <- bike_prediction
view(bike_prediction)
bike_test_prediction <- bike_test %>%
select(datetime, count)
view(bike_test_prediction)
current_directory <- getwd()
print(current_directory)
vroom_write(bike_test_prediction, "/Users/lucydornon/Documents/Stat 348/KaggleBikeShare/BikeTestPrediction.csv")
vroom_write(bike_test_prediction, "/Users/lucydornon/Documents/Stat 348/KaggleBikeShare/BikeTestPrediction.csv", col_names = TRUE)
bike_prediction <- round(bike_prediction)
bike_prediction[bike_prediction < 0] <- 0
view(bike_prediction)
bike_test_prediction <- bike_test %>%
select(datetime, count)
view(bike_test_prediction)
bike_prediction[bike_prediction < 0] <- 0
bike_prediction <- round(bike_prediction)
view(bike_prediction)
bike_test_prediction <- bike_test %>%
select(datetime, count)
view(bike_test_prediction)
bike_prediction[bike_prediction < 0] <- 0
bike_prediction$count <- round(bike_prediction)
view(bike_prediction)
bike_test_prediction <- bike_test %>%
select(datetime, count)
view(bike_test_prediction)
bike_test_prediction <- bike_test %>%
select(datetime, count)
bike_test_prediction$count <- round(count)
bike_test_prediction$count <- round(bike_prediction)
bike_test_prediction$count <- round(.pred)
bike_test_prediction <- round(.pred)
bike_test_prediction <- round(count)
view(bike_prediction)
bike_prediction[bike_prediction < 0] <- 0
view(bike_prediction)
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
view(bike_prediction)
bike_prediction[bike_prediction < 0] <- 0
view(bike_prediction)
bike_test_prediction <- bike_test %>%
select(datetime, count)
view(bike_test_prediction)
bike_test_prediction <- bike_test %>%
select(datetime, count)
view(bike_test_prediction)
vroom_write(bike_test_prediction, "/Users/lucydornon/Documents/Stat 348/KaggleBikeShare/BikeTestPrediction.csv", col_names = TRUE)
myRecipe <- recipe(count~., data = bike_train) %>
myRecipe <- recipe(count~., data = bike_train) %>%
step_mutate(weather = ifelse(weather==4, 3,weather))
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
view(bike_train)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
view(bike_prediction)
bike_prediction[bike_prediction < 0] <- 0
view(bike_prediction)
bike_test_prediction <- bike_test %>%
select(datetime, count)
view(bike_test_prediction)
vroom_write(bike_test_prediction, "/Users/lucydornon/Documents/Stat 348/KaggleBikeShare/BikeTestPrediction.csv", col_names = TRUE)
vroom_write(bike_test_prediction, "/Users/lucydornon/Documents/Stat 348/KaggleBikeShare/BikeTestPrediction.csv")
vroom_write(bike_test_prediction, "/Users/lucydornon/Documents/Stat 348/KaggleBikeShare/BikeTestPrediction.csv", header = TRUE)
bike_train <- vroom("./train.csv") %>%
select(-c("casual", "registered"))
bike_test <-vroom("./test.csv")
myRecipe <- recipe(count~., data = bike_train) %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_mutate(weather=factor(weather, levels=1:3, labels=c("Sunny", "Mist", "Rain"))) %>%
step_mutate(holiday=factor(holiday, levels=c(0,1), labels=c("No", "Yes"))) %>%
step_mutate(workingday=factor(workingday,levels=c(0,1), labels=c("No", "Yes"))) %>%
step_time(datetime, features="hour") %>%
prepped_recipe<- prep(myRecipe)
bike_train <- vroom("./train.csv") %>%
select(-c("casual", "registered"))
bike_test <-vroom("./test.csv")
myRecipe <- recipe(count~., data = bike_train) %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_mutate(weather=factor(weather, levels=1:3, labels=c("Sunny", "Mist", "Rain"))) %>%
step_mutate(holiday=factor(holiday, levels=c(0,1), labels=c("No", "Yes"))) %>%
step_mutate(workingday=factor(workingday,levels=c(0,1), labels=c("No", "Yes"))) %>%
step_time(datetime, features="hour") %>%
prepped_recipe<- prep(myRecipe)
myRecipe <- recipe(count~., data = bike_train) %>%
step_mutate(weather = ifelse(weather==4, 3,weather)) %>%
step_mutate(weather=factor(weather, levels=1:3, labels=c("Sunny", "Mist", "Rain"))) %>%
step_mutate(holiday=factor(holiday, levels=c(0,1), labels=c("No", "Yes"))) %>%
step_mutate(workingday=factor(workingday,levels=c(0,1), labels=c("No", "Yes"))) %>%
step_time(datetime, features="hour")
prepped_recipe<- prep(myRecipe)
bake(prepped_recipe, bike_train)
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(myRecipe) %>%
add_model(my_mod) %>%
fit(data = bike_train)
bike_prediction <- predict(bike_workflow,
bike_test)
view(bike_prediction)
bake(prepped_recipe, new_data = bike_test)
extract_fit_engine(bike_workflow) %>%
summary()
test_preds <- predict(bike_workflow, new_data = bike_test) %>%
bind_cols(., bike_test) %>% #Bind predictions with test data
select(datetime, .pred) %>% #Just keep datetime and predictions
rename(count=.pred) %>% #rename pred to count (for submission to Kaggle)
mutate(count=pmax(0, count)) %>% #pointwise max of (0, prediction)
mutate(datetime=as.character(format(datetime))) #needed for right format to Kaggle
vroom_write(x=test_preds, file="./TestPreds.csv", delim=",")
(plot1 + plot2)/(plot3 + plot4)
ggplot(data= bike, aes(x=windspeed,y= count)) +
geom_point() +
geom_smooth(se=FALSE)
ggplot(data= bike, aes(x=windspeed,y= count)) +
geom_density(fill = "blue",alpha=.5)
ggplot(data= bike, aes(x=windspeed,y= count)) +
geom_boxplot()
ggplot(data= bike, aes(x=datetime,y= count)) +
geom_boxplot()
ggplot(data= bike, aes(x=weather,y= count)) +
geom_boxplot()
bike$weather <- factor(bike$weather, levels = 1:4, labels = c("Sunny", "Mist", "Rain", "Other"))
ggplot(data = bike, aes(x = weather, y = count)) +
geom_boxplot()
plot3<- ggplot(data = bike, aes(x = weather, y = count)) +
geom_boxplot()
(plot1 + plot2)/(plot3 + plot4)
plot4<- plot_histogram(bike)
bike$season <- factor(bike$season, levels = 1:4, labels = c("Spring","Summer","Fall","Winter"))
ggplot(datd = bike, aes(x = season, y= count))+
geom_histogram()
ggplot(data = bike, aes(x = season, y= count))+
geom_histogram()
ggplot(data = bike, aes(x = season, fill = season))+
geom_bar()
plot4<- ggplot(data = bike, aes(x = season, fill = season))+
geom_bar()
(plot1 + plot2)/(plot3 + plot4)
bike$weather <- factor(bike$weather, levels = 1:4, labels = c("Sunny", "Mist", "Rain", "Heavy Rain"))
ggplot(data = bike, aes(x = weather, y = count)) +
geom_boxplot()
ggplot(data = bike, aes(x = weather, y = count)) +
geom_boxplot()
ggplot(data = bike, aes(x = weather, y = count))+
geom_bar(stat = "identity")+
xlab("Weather")+
ylab("Number of Bikes")
bike$weather <- factor(bike$weather, levels = 1:4, labels = c("Sunny", "Mist", "Rain", "Other"))
ggplot(data = bike, aes(x = weather, y = count)) +
geom_boxplot()
(plot1 + plot2)/(plot3 + plot4)
